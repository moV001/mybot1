import telebot
from telebot import types

# Bot token
TOKEN = "7503142025:AAHvVQAtoVIRDNffTADd5DZ5pgYVAdWX8oI"
bot = telebot.TeleBot(TOKEN, parse_mode='MarkdownV2')

# Constants
makeanorder = '\n\n\n‚ùå–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –º–æ–∂–Ω–æ‚ùå\\:\n1Ô∏è‚É£–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ web –≤–µ—Ä—Å–∏–∏ \n2Ô∏è‚É£–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –ø–∞–±–ª–∏–∫–µ \\" –ø—Ä–æ–¥—É–∫—Ç\\" \n3Ô∏è‚É£–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É\\, –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–±–µ—Ä–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º —Ç–æ–≤–∞—Ä \n–í–≤–µ–¥–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏–π'
testcat = "–∫–æ–º–∞–Ω–¥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ \n–º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—â–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏\\: \n/start \\- –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\\. \n/appeals \\- –û–±—Ä–∞—â–µ–Ω–∏—è"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–∞–π–ª
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    keyaaa = types.InlineKeyboardButton('Web vershion', web_app=telebot.types.WebAppInfo('https://mov001.github.io/testiruem2/'))
    keyd = types.InlineKeyboardButton('public', url='https://t.me/nupizdetshe')
    appeals = types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ', callback_data='appeals')
    markup.add(keyd, appeals, keyaaa)
    bot.send_message(message.chat.id, 'ü´∞   „Ö§–¢–≤–æ–π  –º–∏—Ä„Ö§   ü´∞', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'appeals')
def show_additional_button(call):
    markup = telebot.types.InlineKeyboardMarkup(row_width=2)
    afrome = telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –æ—Ç–∑—ã–≤', callback_data='afrome')
    bfrome = telebot.types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='bfrome')
    onstart = telebot.types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='onstart')
    markup.add(afrome, bfrome, onstart)
    # Edit both text and reply_markup in one operation
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, 
                          text='ü´∞   „Ö§–¢–≤–æ–π  –º–∏—Ä„Ö§   ü´∞', reply_markup=markup)
    bot.answer_callback_query(call.id)

admin_id = "6285222102"  # Replace with your Telegram ID

@bot.message_handler(commands=['cancel'])
def cancel_handler(message):
    bot.send_message(message.chat.id, '–û—Ç–º–µ–Ω–∞')
    bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)

@bot.message_handler(commands=['appeals'])
def handle_command(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    afrome = types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –æ—Ç–∑—ã–≤', callback_data='afrome')
    bfrome = types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='bfrome')
    onstart = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='onstart')
    markup.add(afrome, bfrome, onstart)
    bot.send_message(chat_id=message.chat.id, text='ü´∞   „Ö§–¢–≤–æ–π  –º–∏—Ä„Ö§   ü´∞', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'afrome')
def ask_for_review_name(call):
    bot.send_message(call.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
    bot.register_next_step_handler(call.message, ask_for_review)
    bot.answer_callback_query(call.id)

def ask_for_review(message):
    if message.text.lower() == '/cancel':
        cancel_handler(message)
        return
    name = message.text
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤')
    bot.register_next_step_handler(message, save_review, name)
    return

def save_review(message, name):
    if message.text.lower() == '/cancel':
        cancel_handler(message)
        return
    review = message.text
    user_id = message.from_user.id
    username = message.from_user.username
    with open('reviews.txt', 'a', encoding='utf-8') as file:
        file.write(f"–ò–º—è: {name}\n–û—Ç–∑—ã–≤: {review}\n\n ID: {user_id}\nUsername: @{username}")
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤')
    bot.send_message(admin_id, f"–û—Ç–∑—ã–≤\\. \n–ò–º—è: {name}\n–û—Ç–∑—ã–≤: {review}\nID: {user_id}\nUsername: @{username}")

@bot.callback_query_handler(func=lambda call: call.data == 'bfrome')
def ask_for_order_name(call):
    bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, –≥–æ—Ä–æ–¥')
    bot.register_next_step_handler(call.message, ask_for_order)
    bot.answer_callback_query(call.id)

def ask_for_order(message):
    if message.text.lower() == '/cancel':
        cancel_handler(message)
        return
    name = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∏ –µ–≥–æ –∫–æ–ª\\-–≤–æ' + makeanorder)
    bot.register_next_step_handler(message, save_order, name)
    return

def save_order(message, name):
    if message.text.lower() == '/cancel':
        cancel_handler(message)
        return
    order = message.text
    user_id = message.from_user.id
    username = message.from_user.username
    with open('orders.txt', 'a', encoding='utf-8') as file:
        file.write(f"–ò–º—è: {name}\n–ü–æ–∫—É–ø–∫–∞: {order}\n\n ID: {user_id}\nUsername: @{username}")
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ\\. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    bot.send_message(admin_id, f"–§–ò–ì: {name}\n–ü–æ–∫—É–ø–∫–∞: {order}\nID: {user_id}\nUsername: @{username}")

@bot.callback_query_handler(func=lambda call: call.data == 'onstart')
def back_to_start(call):
    markup = types.InlineKeyboardMarkup(row_width=2)
    keyaaa = types.InlineKeyboardButton('Web vershion', web_app=telebot.types.WebAppInfo('https://mov001.github.io/testiruem2/'))
    keyd = types.InlineKeyboardButton('public', url='https://t.me/nupizdetshe')
    appeals = types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ', callback_data='appeals')
    markup.add(keyd, appeals, keyaaa)
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='ü´∞   „Ö§–¢–≤–æ–π EWA –º–∏—Ä„Ö§   ü´∞', reply_markup=markup)
    bot.answer_callback_query(call.id)

bot.polling(none_stop=True, interval=0)